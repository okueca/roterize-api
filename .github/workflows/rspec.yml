name: Testing Rspec

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      RACK_ENV: test
      BOOTSNAP_DISABLE: "1"
      DISABLE_SPRING: "1"
      RAILS_LOG_TO_STDOUT: "1"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build images
        run: docker compose -f compose.yml build --no-cache

      # No "up" step needed if you use Atlas

      - name: Execute RSpec
        run: |
          docker compose -f compose.yml run --rm -T --user root \
            -e RAILS_ENV=test \
            -e RACK_ENV=test \
            -e "MONGODB_URL=${{ vars.MONGODB_URL }}" \
            -e "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" \
            -e BOOTSNAP_DISABLE=1 \
            -e DISABLE_SPRING=1 \
            web bash -lc '
              set -e
              umask 000
              mkdir -p log tmp/pids tmp/cache tmp/sockets
              : > log/test.log
              chmod -R a+rwX log tmp
              bundle exec rspec
            '

      - name: Show logs on failure
        if: failure()
        run: docker compose -f compose.yml logs --no-color

      - name: Tear down
        if: always()
        run: docker compose -f compose.yml down -v