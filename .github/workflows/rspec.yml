name: Testing Rspec

on:
  push:
    branches:
      - main

jobs: 
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./compose.yml"

      - name: Build images
        run: docker compose -f compose.yml build --no-cache

      # Start only dependencies (adjust names to match your compose)
      - name: Start dependencies
        run: docker compose -f compose.yml up

      # Prepare app dirs, DB, then run RSpec in a fresh one-off container
      - name: Run RSpec (one-off container)
        env:
          RAILS_ENV: test
          RACK_ENV: test
          # Provide BOTH in case your initializer reads credentials or ENV:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}          # to read Rails credentials
          # Optional stabilizers (safe to include)
          DISABLE_SPRING: "1"
          BOOTSNAP_DISABLE: "1"
          RAILS_LOG_TO_STDOUT: "1"
        run: |
          docker compose -f compose.yml run --rm -T web bash -lc '
            set -e
            mkdir -p log tmp/pids tmp/cache tmp/sockets &&
            touch log/test.log &&
            chmod -R 777 log tmp &&
            bundle exec rspec
          '

      - name: Show logs on failure
        if: failure()
        run: docker compose -f compose.yml logs --no-color